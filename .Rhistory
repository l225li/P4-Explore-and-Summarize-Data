theme_fivethirtyeight() +
theme(plot.title = element_text(size = 20, face = 'plain', hjust = 0.5))
table(wine$quality %in% c(7, 8, 9))
```
From this histogram of quality counts, we can see it's a normal distribution
with mean (solid line) and median (dashed line) with almost the same value.
Most of the white wine has a quality of 6, and second place is 5.
```{r echo=FALSE, Pareto_principle}
table(wine$quality %in% c(7, 8, 9))
1060 / 3838
```
I remember my wine teacher always talks about Pareto principle (80/20 rule)
in the wine industry (Yes, I had a wine teacher). Wine of quality 7, 8, 9
makes up 27.6% of the total number of white wines rated. Therefore, we will
consider quality of 7, 8, 9 as premium.
```{r echo=FALSE, SO2_histogram}
p1 <- ggplot(data = wine, aes(x = total.sulfur.dioxide)) +
geom_histogram(color='white', fill = I('#7986CB')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of total SO"[2])) +
geom_vline(aes(xintercept=210), size=1, color=I('#FFC107')) +
geom_text(label="210 mg/L", y=500, x = 270, color=I('#FFC107')) +
theme(plot.title = element_text(size = 15, hjust = 0.5))
p2 <- ggplot(data = wine, aes(x = free.sulfur.dioxide)) +
geom_histogram(color='white', fill = I('#3F51B5')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of free SO"[2])) +
theme(plot.title = element_text(size = 15, hjust = 0.5))
p3 <- ggplot(data = wine, aes(x = sulphates)) +
geom_histogram(color='white', fill = I('#283593')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of total sulphates")) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
grid.arrange(p1,p2,p3, ncol=2)
table(wine$total.sulfur.dioxide>=210)
```
> All wines contains sulphur dioxide in various forms, collectively known
as sulphites. Even in completely unsulphured wine it is present at concentration
of up to 10 mg/L. Commercially-made wines contain from ten to twenty times that
amount.
(Source: [morethanorganic](http://www.morethanorganic.com/sulphur-in-the-bottle))
Reasons why SO~2~ is not desirable in wine:
* taste: unpleasant smell
* health: potentially fatal allergic reactions
* principle: naturalness in wine
According to EU law, the maximum permitted level of SO~2~ in white/rose wine is
210 mg/l. As you can see in the first histogram, there are 285 wines exceeded
this limit. And we can observe that all three of them have a right-skewed
distribution. This might be due to the restriction of the sulphate and most
of the vineyards would obey the rules and avoid exceeding the limit.
```{r acidity}
p1 <- ggplot(data = wine, aes(x = fixed.acidity)) +
geom_histogram(color='white', fill = I('#FF9800')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of fixed acidity (tartaric acid) g/dm"^3)) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p2 <- ggplot(data = wine, aes(x = volatile.acidity)) +
geom_histogram(color='white', fill = I('#FF9800')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of volatile acidity (acetic acid) g/dm"^3)) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p3 <- ggplot(data = wine, aes(x = citric.acid)) +
geom_histogram(color='white', fill = I('#FF9800')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of citric acid g/dm"^3)) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p4 <- ggplot(data = wine, aes(x = pH)) +
geom_histogram(color='white', fill = I('#FF9800')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of PH")) +
geom_vline(aes(xintercept=median(pH)), size=1, color=I('#A1887F')) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
grid.arrange(p1, p2, p3, p4, ncol=2)
mean(wine$pH)
median(wine$pH)
```
In this set of histograms, we explore the acidity in wines. We have the first
three variables which are the amount of corresponding acid found in the wines.
The fourth variable `pH` indicates the acidity level where 7 is neutral and
smaller the value is, more acidic the liquid is. We observe a right skewed
distribution of the first three and a normal distribution of PH with median
and mean at 3.18 (acidic). It makes sense to have the PH histogram not right
skewed as the above 3 ones since the outliers in the acidity histogram would
have a lower PH value (tail on the left of PH histogram).
```{r suger_and_salt}
p1 <- ggplot(data = wine, aes(x = residual.sugar)) +
geom_histogram(color='white', fill = I('#F8BBD0')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of residual sugar g/dm"^3)) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p2 <- ggplot(data = wine, aes(x = chlorides)) +
geom_histogram(color='white', fill = I('#64B5F6')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of salt (NaCl) g/dm"^3))  +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p3 <- ggplot(data = wine, aes(x = density)) +
geom_histogram(color='white', fill = I('#8BC34A')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of density g/cm"^3))  +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p4 <- ggplot(data = wine, aes(x = alcohol)) +
geom_histogram(color='white', fill = I('#FFC107')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of alcohol %"))  +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
grid.arrange(p1, p2, p3, p4, ncol=2)
```
Some people believe that sweeter a wine is, the more alcohol it should contain.
We cannot tell this just by looking at the histogram here yet. We will more
into it in the bivariate plot section. Here we can see both residual sugar
and salt have very right skewed distribution. And the amount of salt is really
tiny for all white wines with maximum of 0.346 g/L. Histogram of alcohol
is a bit right skewed with peaks at around 9 - 9.5 %, it also is quite uniform
distributed other than the peak points. Most wines have alcohol level of 8.5 -
12 %.
# Univariate Analysis
### What is the structure of your dataset?
The white wine quality dataset consists of 4898 observations and 12 variables.
Each observation is a white variant of the Portuguese "Vinho Verde" wine. Among
the 12 variables, there are 11 input variables (numeric) which represent the
amount of corresponding substance existing in the wine based on physicochemical
tests. The output variable `quality` is based on sensory data (median of at
least 3 evaluations made by wine experts), and it is an ordered categorical data
with range between 0 (very bad) and 10 (very excellent).
### What is/are the main feature(s) of interest in your dataset?
The main feature of interest is `quality`. I am curious in knowing how does the
amount of other factors affect the rating from the wine experts.
### What other features in the dataset do you think will help support your \
investigation into your feature(s) of interest?
By reading the [description of the dataset here ](https://s3.amazonaws.com/udacity-hosted-downloads/ud651/wineQualityInfo.txt),
I think `volatile acidity`, `citric acid`, `free sulfur dioxide`,
`total sulfur dioxide`, `density` may support my investigation. Because they
seems to affect the smell, taste and color. `density` may contribute to the
effect of "wine curtains" which is also a essential part of wine tasting.
### Did you create any new variables from existing variables in the dataset?
No, I haven't.
### Of the features you investigated, were there any unusual distributions? \
Did you perform any operations on the data to tidy, adjust, or change the form \
of the data? If so, why did you do this?
I dropped the column `X` which appears to be the row number. I also changed
`quality` to a ordered categorical variable with score between 0 and 10.
Many variables have a right skewed distribution with outliers on the far end
of the tail. However, `quality` is quite normal distribution with no extreme
value like 0, 1, 2, or 10. I haven't removed the "outliers" from the dataset
because at this point I am not sure if their extremeness contribute to the
feature of interest.
# Bivariate Plots Section
To have broad overview of what variables might be interesting, a scatterplot
matrix sounds like a good idea.
```{r echo=FALSE, scatterplot_matrix}
set.seed(42)
ggpairs(wine, axisLabels = 'none')
```
```{r}
corrplot(cor(wine %>% na.omit() %>% select_if(is.numeric), method = "pearson"),
method='ellipse',
order="AOE", tl.cex=1, tl.col="#604c4c")
```
```{r boxplots}
numFeatures <- names(wine)[1:11]
listFeatures <- list()
for(i in 1:length(numFeatures)){
y = numFeatures[i]
title <- paste(y,"per quality level")
listFeatures[[i]] <- wine %>% na.omit() %>%
ggplot(aes_string(x = wine$quality, y = y, color=y)) +
geom_boxplot(colour='#0b421a',size=.5,alpha=.5) +
geom_jitter(shape=16,width=.2,size=1, alpha=0.05) +
ggtitle(title) + coord_flip() +
scale_color_gradientn(
colours=colorRampPalette(c("#eac784","#362415"))(20)) +
theme(legend.position='none',
plot.title = element_text(size = 10, face = 'plain', hjust = 0.5))
}
do.call(grid.arrange, c(listFeatures, ncol=3))
```
An interesting observation is that the outliers they happen more at the
middle range qualities (5, 6, 7) than the extreme values. Very small amounts
of outliers can be observed for 9-quality or 3-quality wines.
If you look at the boxplot at quality 9 for each factor, notice that the "box"
is generally smaller than other qualities (especially `density`,
`sulfur.dioxide`). This suggests that there is a specific set of charateristics
in order to be rated as an "very excellent" quality Portuguese "Vinho Verde"
white wine. At this point, I'm impressed by the wine experts who rated these
wines. Just by blind tasting, they can detect the excellent wine with the exact
right amount of each substances.
# Bivariate Analysis
### Talk about some of the relationships you observed in this part of the \
investigation. How did the feature(s) of interest vary with other features in \
the dataset?
From the set of boxplots, we can observe that `alcohol` seems to be appreciated.
With higher alcohol level, the median rating of quality is generally higher.
`pH`, `fixed.acid` and `citric acid` shows slight positive correlation as well.
On the other side, `sulfur.oxide`, `sugar`, and `density` are not appreciated,
negatively correlated to quality.
### Did you observe any interesting relationships between the other features \
(not the main feature(s) of interest)?
We can observe that there is strong (0.853) correlation between `density` and
`residual.sugar` which is what I suspected before.
It's only nutural to see that `free.sulfur.dioxide` and `total.sulfur dioxide`
has a correlation of 0.61.
Also as suspected before, `sugar` and `density` has a strong correlation
of 0.839. All other factors somewhat contribute to `density` a bit as we can
see the correlation ranges from 0.15 to 0.839 for `density` with other factors
except for the factor `volatile acidity` (corr: 0.0271).
Surprisingly, `alcohol` and `residual.sugar` have a negative correlation
of -0.427. `alcohol` and `density` also have a strong negative correlation of
-0.711, which makes sense since `density` and `residual.sugar` are highly
positively correlated.
From the boxplots on the `quality` column, we suspect that `alcohol`,
`total.sulfur.dioxide`, and `density` have some effects on the ratings of
wine quality by the wine experts.
### What was the strongest relationship you found?
The strongest relationship I found is between `residual.sugar` and `density`.
They have a correlation of 0.853. `density` and `alcohol` also has a strong
negative correlation of -0.78.
# Multivariate Plots Section
```{r sugar_vs_density}
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = residual.sugar, y = density, color = quality)) +
geom_point(alpha=0.2)+ geom_smooth(method = 'lm', se=FALSE)+
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Quality") +
facet_wrap(~quality) +
theme(plot.title = element_text(hjust = 0.5, size=20))
```
To make this set of plots, outliers (`residual.sugar` > 30) are removed from the
dataset.
We can see that the strong correlation between density and sugar doesn't change
at no matter what quality. This suggests that there might be little added value
to use both variables when it comes to modeling quality.
```{r}
wine$type <- ifelse(wine$quality %in% c(7,8,9), "premium", "midiocre")
wine %>% na.omit() %>%
ggplot(aes(x = total.sulfur.dioxide, y = density, color = type)) +
geom_point(aes(size = alcohol),alpha=0.05)+ geom_smooth(method = 'lm', se=FALSE)+
scale_color_brewer(type='qual',
guide = guide_legend(title="Type",
override.aes = list(alpha=1, size=2)))+
ggtitle("sulfur dioxide vs density by type") +
theme(plot.title = element_text(hjust = 0.5, size=20)) +
facet_wrap(~type)
```
I created a new variable `type` which labels wines with `quality` above and
including 7 as `premium` and the rest as `mediocre`. As you can
# Multivariate Analysis
### Talk about some of the relationships you observed in this part of the \
investigation. Were there features that strengthened each other in terms of \
looking at your feature(s) of interest?
### Were there any interesting or surprising interactions between features?
### OPTIONAL: Did you create any models with your dataset? Discuss the \
strengths and limitations of your model.
------
# Final Plots and Summary
> **Tip**: You've done a lot of exploration and have built up an understanding
of the structure of and relationships between the variables in your dataset.
Here, you will select three plots from all of your previous exploration to
present here as a summary of some of your most interesting findings. Make sure
that you have refined your selected plots for good titling, axis labels (with
units), and good aesthetic choices (e.g. color, transparency). After each plot,
make sure you justify why you chose each plot by describing what it shows.
### Plot One
```{r echo=FALSE, Plot_One}
```
### Description One
### Plot Two
```{r echo=FALSE, Plot_Two}
```
### Description Two
### Plot Three
```{r echo=FALSE, Plot_Three}
```
### Description Three
------
# Reflection
> **Tip**: Here's the final step! Reflect on the exploration you performed and
the insights you found. What were some of the struggles that you went through?
What went well? What was surprising? Make sure you include an insight into
future work that could be done with the dataset.
> **Tip**: Don't forget to remove this, and the other **Tip** sections before
saving your final work and knitting the final report!
wine %>% na.omit() %>%
ggplot(aes(x = total.sulfur.dioxide, y = density, color = type)) +
geom_point(aes(size = alcohol),alpha=0.05)+ geom_smooth(method = 'lm', se=FALSE)+
scale_color_brewer(type='qual',
guide = guide_legend(title="Type",
override.aes = list(alpha=1, size=2)))+
ggtitle("sulfur dioxide vs density by type") +
theme(plot.title = element_text(hjust = 0.5, size=20)) +
facet_wrap(~alcohol)
wine %>% na.omit() %>%
ggplot(aes(x = total.sulfur.dioxide, y = density, color = type)) +
geom_point(aes(size = alcohol),alpha=0.05)+ geom_smooth(method = 'lm', se=FALSE)+
scale_color_brewer(type='qual',
guide = guide_legend(title="Type",
override.aes = list(alpha=1, size=5)))+
ggtitle("sulfur dioxide vs density by type") +
theme(plot.title = element_text(hjust = 0.5, size=20)) +
facet_wrap(~alcohol)
ype
wine %>% na.omit() %>%
ggplot(aes(x = total.sulfur.dioxide, y = density, color = type)) +
geom_point(aes(size = alcohol),alpha=0.05)+ geom_smooth(method = 'lm', se=FALSE)+
scale_color_brewer(type='qual',
guide = guide_legend(title="Type",
override.aes = list(alpha=1, size=2)))+
ggtitle("sulfur dioxide vs density by type") +
theme(plot.title = element_text(hjust = 0.5, size=20)) +
facet_wrap(~type)
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = residual.sugar, y = density)) +
geom_point(alpha=0.2) + geom_smooth(aes(color = quality), method='lm', se=FALSE)
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = residual.sugar, y = density)) +
geom_point(alpha=0.2) + geom_smooth(aes(color = quality), method='lm', se=FALSE) +
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Quality") +
theme(plot.title = element_text(hjust = 0.5, size=20))
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = residual.sugar, y = density, color = quality)) +
geom_point(alpha=0.2)+ geom_smooth(method = 'lm', se=FALSE)+
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Quality") +
facet_wrap(~quality) +
theme(plot.title = element_text(hjust = 0.5, size=20))
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = residual.sugar, y = density)) +
geom_point(alpha=0.2) + geom_smooth(aes(color = quality), method='lm', se=FALSE) +
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Quality") +
theme(plot.title = element_text(hjust = 0.5, size=20))
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = residual.sugar, y = density)) +
geom_point(alpha=0.05) + geom_smooth(aes(color = quality), method='lm', se=FALSE) +
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Quality") +
theme(plot.title = element_text(hjust = 0.5, size=20))
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = residual.sugar, y = density)) +
geom_point(alpha=0.1) + geom_smooth(aes(color = quality), method='lm', se=FALSE) +
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Quality") +
theme(plot.title = element_text(hjust = 0.5, size=20))
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = residual.sugar, y = density)) +
geom_point(alpha=0.1) + geom_smooth(aes(color = type), method='lm', se=FALSE) +
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Quality") +
theme(plot.title = element_text(hjust = 0.5, size=20))
wine %>% na.omit() %>%
ggplot(aes(x = residual.sugar, y = density)) +
geom_point(alpha=0.1) + geom_smooth(aes(color = type), method='lm', se=FALSE) +
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Quality") +
theme(plot.title = element_text(hjust = 0.5, size=20))
%>% subset(residual.sugar <= 30)
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = residual.sugar, y = density)) +
geom_point(alpha=0.1) + geom_smooth(aes(color = type), method='lm', se=FALSE) +
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Quality") +
theme(plot.title = element_text(hjust = 0.5, size=20))
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = residual.sugar, y = density)) +
geom_point(alpha=0.1) + geom_smooth(aes(color = type), method='lm', se=FALSE) +
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Type") +
theme(plot.title = element_text(hjust = 0.5, size=20))
table(wine$type)
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = total.sulfur.dioxide, y = density)) +
geom_point(alpha=0.1) + geom_smooth(aes(color = type), method='lm', se=FALSE) +
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Sugar vs. Density by Type") +
theme(plot.title = element_text(hjust = 0.5, size=20))
wine %>% na.omit() %>% subset(residual.sugar <= 30) %>%
ggplot(aes(x = total.sulfur.dioxide, y = density)) +
geom_point(alpha=0.1) + geom_smooth(aes(color = type), method='lm', se=FALSE) +
scale_color_brewer(type='qual',
palette = 'Set2',
guide = guide_legend(title="Quality",
override.aes = list(alpha=1, size=2)))+
ggtitle("Total sulfur dioxide vs Density by Type") +
theme(plot.title = element_text(hjust = 0.5, size=20))
ggplot(data = wine, aes(x = as.numeric(quality))) +
geom_histogram(stat='count', fill = I('#3F51B5')) +
ggtitle('Histogram of quality counts') +
geom_vline(aes(xintercept = as.numeric(median_quality)),
color = I('#FFC107'),
linetype='dashed', size=1) +
geom_vline(aes(xintercept = as.numeric(mean_quality)),
color = I('#FFC107'),
size=1) +
scale_x_continuous(breaks=c(seq(3,9,1))) +
theme_fivethirtyeight() +
theme(plot.title = element_text(size = 20, face = 'plain', hjust = 0.5))
p1 <- ggplot(data = wine, aes(x = total.sulfur.dioxide)) +
geom_histogram(color='white', fill = I('#7986CB')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of total SO"[2])) +
geom_vline(aes(xintercept=210), size=1, color=I('#FFC107')) +
geom_text(label="210 mg/L", y=500, x = 270, color=I('#FFC107')) +
theme(plot.title = element_text(size = 15, hjust = 0.5))
p2 <- ggplot(data = wine, aes(x = free.sulfur.dioxide)) +
geom_histogram(color='white', fill = I('#3F51B5')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of free SO"[2])) +
theme(plot.title = element_text(size = 15, hjust = 0.5))
p3 <- ggplot(data = wine, aes(x = sulphates)) +
geom_histogram(color='white', fill = I('#283593')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of total sulphates")) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
grid.arrange(p1,p2,p3, ncol=2)
grid.arrange(p1,p2,p3, ncol=2)
table(wine$total.sulfur.dioxide>=210)
p1 <- ggplot(data = wine, aes(x = fixed.acidity)) +
geom_histogram(color='white', fill = I('#FF9800')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of fixed acidity (tartaric acid) g/dm"^3)) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p2 <- ggplot(data = wine, aes(x = volatile.acidity)) +
geom_histogram(color='white', fill = I('#FF9800')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of volatile acidity (acetic acid) g/dm"^3)) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p3 <- ggplot(data = wine, aes(x = citric.acid)) +
geom_histogram(color='white', fill = I('#FF9800')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of citric acid g/dm"^3)) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p4 <- ggplot(data = wine, aes(x = pH)) +
geom_histogram(color='white', fill = I('#FF9800')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of PH")) +
geom_vline(aes(xintercept=median(pH)), size=1, color=I('#A1887F')) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
grid.arrange(p1, p2, p3, p4, ncol=2)
p1 <- ggplot(data = wine, aes(x = residual.sugar)) +
geom_histogram(color='white', fill = I('#F8BBD0')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of residual sugar g/dm"^3)) +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p2 <- ggplot(data = wine, aes(x = chlorides)) +
geom_histogram(color='white', fill = I('#64B5F6')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of salt (NaCl) g/dm"^3))  +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p3 <- ggplot(data = wine, aes(x = density)) +
geom_histogram(color='white', fill = I('#8BC34A')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of density g/cm"^3))  +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
p4 <- ggplot(data = wine, aes(x = alcohol)) +
geom_histogram(color='white', fill = I('#FFC107')) +
theme_fivethirtyeight() +
ggtitle(bquote("Histogram of alcohol %"))  +
theme(plot.title = element_text(size = 15, face = "plain", hjust = 0.5))
grid.arrange(p1, p2, p3, p4, ncol=2)
m1 <- lm(as.numeric(quality) ~ alcohol, data = rw)
mtable(m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11)
m1 <- lm(as.numeric(quality) ~ alcohol, data = wine)
m2 <- update(m1, ~ . + fixed.acidity, data = wine)
m3 <- update(m2, ~. + volatile.acidity)
m4 <- update(m3, ~. + citric.acid)
m5 <- update(m4, ~. + residual.sugar)
m6 <- update(m5, ~. + chlorides)
m7 <- update(m6, ~. + free.sulfur.dioxide)
m8 <- update(m7, ~. + total.sulfur.dioxide)
m9 <- update(m8, ~. + density)
m10 <- update(m9, ~. + pH)
m11 <- update(m10, ~. + sulphates)
mtable(m1, m2, m3, m4, m5, m6, m7, m8, m9, m10, m11)
library(memisc)
install.packages('memis)
theme_set(theme_fivethirtyeight(base_size = 10))
install.packages('memisc')
install.packages('memisc')
install.packages("memisc", repos="http://R-Forge.R-project.org")
